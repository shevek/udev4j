// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    apply from: file('gradle/buildscript.gradle'), to: buildscript 

	repositories {
		// maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		jcenter()
		// mavenLocal()
	}

	dependencies {
		classpath "org.anarres.gradle:gradle-jnaerator-plugin:1.0.1"
		classpath "com.nativelibs4java:jnaerator:0.12"
	}
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/github.gradle')
apply from: file('gradle/nexus.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')

subprojects {
	group = "org.anarres.udev"
}

project(':udev-jna') {
	dependencies {
		compile 'com.nativelibs4java:jnaerator-runtime:0.11'
		// If JNA
		compile 'net.java.dev.jna:jna:4.1.0'
		// If BridJ
		// compile 'com.nativelibs4java:bridj:0.6.2'

		compile 'com.google.guava:guava:18.0'

		testCompile "org.slf4j:slf4j-api:1.7.7"
	}

	apply plugin: 'org.anarres.jnaerator'

	jnaerator {
		libraryName 'udev'
		packageName 'org.anarres.udev.generated'
		headerFiles "/usr/include/libudev.h"
		// runtimeMode "BridJ"
	}
}
