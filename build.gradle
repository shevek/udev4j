// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    apply from: file('gradle/buildscript.gradle'), to: buildscript 

	repositories {
		mavenLocal()
		maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
		jcenter()
	}

	dependencies {
		classpath "org.anarres.gradle:gradle-jnaerator-plugin:1.0.1"
		classpath "com.nativelibs4java:jnaerator:0.12-SNAPSHOT"
	}
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/github.gradle')
apply from: file('gradle/nexus.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')

subprojects {
	group = "org.anarres.udev"

	dependencies {
		compile 'com.nativelibs4java:jnaerator-runtime:0.11'
		// If JNA
		compile 'net.java.dev.jna:jna:4.1.0'
		// If BridJ
		// compile 'com.nativelibs4java:bridj:0.6.2'

		compile 'com.google.guava:guava:18.0'

		testCompile "org.slf4j:slf4j-api:1.7.7"
	}
}

project(':udev') {
	apply plugin: 'org.anarres.jnaerator'

	jnaerator {
		libraryName 'udev'
		packageName 'org.anarres.udev.generated'
		headerFiles '/usr/include/libudev.h'
		define "property=name"
	}
}

project(':parted') {
	apply plugin: 'org.anarres.jnaerator'

	jnaerator {
		libraryName 'parted'
		packageName 'org.anarres.device.parted.generated'
		headerFiles '/usr/include/parted/parted.h'
		// Exclude GNU headers that don't work.
		// https://github.com/ochafik/nativelibs4java/issues/546
		// define "_STDIO_H=1"
		// https://github.com/ochafik/nativelibs4java/issues/542
		// define "time_t=long"
		// https://github.com/ochafik/nativelibs4java/issues/547
		// runtimeMode "JNAerator"
	}
}

project(':devmapper') {
	apply plugin: 'org.anarres.jnaerator'

	jnaerator {
		libraryName 'devmapper'
		packageName 'org.anarres.device.devmapper.generated'
		headerFiles '/usr/include/libdevmapper.h'
		// https://github.com/ochafik/nativelibs4java/issues/546
		// define "_STDIO_H=1", "_UNISTD_H=1", "_IO_STDIO_H=1"
	}
}

project(':ext2fs') {
	apply plugin: 'org.anarres.jnaerator'

	jnaerator {
		libraryName 'ext2fs'
		packageName 'org.anarres.device.ext2fs.generated'
		headerFiles '/usr/include/ext2fs/ext2fs.h'
		// https://github.com/ochafik/nativelibs4java/issues/546
		// define "_STDIO_H=1"
		// https://github.com/ochafik/nativelibs4java/issues/542
		// define "time_t=long"
		// https://github.com/ochafik/nativelibs4java/issues/548
		define "ext2fs_mmp_new_seq=int ext2fs_mmp_new_seq"
	}
}

project(':augeas') {
	apply plugin: 'org.anarres.jnaerator'

	jnaerator {
		libraryName 'augeas'
		packageName 'org.anarres.device.augeas.generated'
		headerFiles '/usr/include/augeas.h'
		// https://github.com/ochafik/nativelibs4java/issues/546
		// define "_STDIO_H=1"
		// args "-emptyStructsAsForwardDecls"
	}
}
